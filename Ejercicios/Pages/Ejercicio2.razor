@page "/ejercicio2"
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@using Newtonsoft.Json;
@using System.Text.Json.Serialization;

@if (Profile != null) {
    <div class="container">
        <div class="main-body">
            <div class="row gutters-sm">
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex flex-column align-items-center text-center">
                                <img src="@pic" alt="Admin" class="rounded-circle" width="150">
                                <div class="mt-3">
                                    <h4></h4>
                                    <p class="text-secondary mb-1">Full Stack Developer</p>
                                    <p class="text-muted font-size-sm">@adresses</p>
                                    <button class="btn btn-primary">Follow</button>
                                    <button class="btn btn-outline-primary">Message</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card mt-3">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                                <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-globe mr-2 icon-inline"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path></svg>Website</h6>
                                <span class="text-secondary">https://<span>@username</span>.com</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                                <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-github mr-2 icon-inline"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>Github</h6>
                                <span class="text-secondary">@username</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                                <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-twitter mr-2 icon-inline text-info"><path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path></svg>Twitter</h6>
                                <span class="text-secondary">@username</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                                <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-instagram mr-2 icon-inline text-danger"><rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path><line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line></svg>Instagram</h6>
                                <span class="text-secondary">@username</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                                <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-facebook mr-2 icon-inline text-primary"><path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path></svg>Facebook</h6>
                                <span class="text-secondary">@username</span>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card mb-3">
                        <div class="card-body">
                            @foreach (var dato in Datos) {
                                <div class="row">
                                    <div class="col-sm-3">
                                        <h6 class="mb-0">@dato.Name</h6>
                                    </div>
                                    <div class="col-sm-9 text-secondary">
                                        @dato.Dato
                                    </div>
                                </div>
                                <hr>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

} 
else {
<div><h1>Cargando...</h1></div>
}




@code {
    public Root Profile { get; set; }
    List<Data> Datos;
    string fullname, email, phone, cell, adresses, pic, gender, username, password, nacimiento, edad, nacionality;

    protected override async Task OnInitializedAsync() {
        Profile = await Http.GetFromJsonAsync<Root>("https://randomuser.me/api/?results=1");
        fullname = $"{Profile.Results[0].Name.First} {Profile.Results[0].Name.Last}";
        email = Profile.Results[0].Email;
        phone = Profile.Results[0].Phone;
        cell = Profile.Results[0].Cell;
        adresses = $"{Profile.Results[0].Location.City}, {Profile.Results[0].Location.State}, {Profile.Results[0].Location.Country}";
        pic = Profile.Results[0].Picture.Large;
        gender = Profile.Results[0].Gender;
        username = Profile.Results[0].Login.Username;
        password = Profile.Results[0].Login.Password;
        nacimiento = Profile.Results[0].Dob.Date.ToString();
        edad = Profile.Results[0].Dob.Age.ToString();
        nacionality = $"{Profile.Results[0].Location.Country} ({Profile.Results[0].Nat})";



        Datos = new List<Data>() {
            new Data() { Name = "Full Name", Dato = fullname},
            new Data() { Name = "Username", Dato = username },
            new Data() { Name = "Password", Dato = password},
            new Data() { Name = "Gender", Dato = gender},
            new Data() { Name = "Birthday", Dato = nacimiento},
            new Data() { Name = "Email", Dato = email},
            new Data() { Name = "Phone", Dato = phone},
            new Data() { Name = "Mobile", Dato = cell},
            new Data() { Name = "Adresses", Dato = adresses},
            new Data() { Name = "Country", Dato = nacionality},
        };



    }

    class Data {
        public string Name { get; set; }
        public string Dato { get; set; }
    }




}
